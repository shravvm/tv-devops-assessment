name: CD

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: false

env:
  AWS_REGION:     ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  ECR_REGISTRY:      ${{ vars.ECR_REGISTRY }}
  ECS_CLUSTER:    assessment-ecs-cluster
  ECS_SERVICE:    assessment-app-service
  GH_TOKEN:       ${{ secrets.GITHUB_TOKEN }}

permissions:
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Determine tag
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_OUTPUT
            echo "PROMOTE_LATEST=false" >> $GITHUB_OUTPUT

          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.image_tag }}" != "" ]]; then
            echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
            echo "PROMOTE_LATEST=false" >> $GITHUB_OUTPUT

          else
            TAG=$(gh run list \
              -R ${{ github.repository }} \
              --workflow CI.yml \
              --branch main \
              --event pull_request \
              --limit 1 \
              --json runNumber,headSha \
              | jq -r '.[0] | "\(.runNumber)-\(.headSha)"')
            echo "IMAGE_TAG=$TAG" >> $GITHUB_OUTPUT
            echo "PROMOTE_LATEST=true" >> $GITHUB_OUTPUT
          fi
          echo "IMAGE_TAG: ${{ steps.tag.outputs.IMAGE_TAG }}"
          echo "PROMOTE_LATEST: ${{ steps.tag.outputs.PROMOTE_LATEST }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}
      
      - name: Promote image to latest
        if: steps.tag.outputs.PROMOTE_LATEST == 'true'
        run: |
          echo "Pulling image: $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.tag.outputs.IMAGE_TAG }}"
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.tag.outputs.IMAGE_TAG }}

          echo "Tagging image as latest"
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.tag.outputs.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "Pushing image with latest tag"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          

      - name: Update ECS Service
        uses: ./.github/actions/update-ecs-service
        with:
          aws_region:     ${{ env.AWS_REGION }}
          ecr_registry:   ${{ env.ECR_REGISTRY }}
          ecr_repository: ${{ env.ECR_REPOSITORY }}
          cluster:        ${{ env.ECS_CLUSTER }}
          service:        ${{ env.ECS_SERVICE }}
          image_tag:      ${{ steps.tag.outputs.PROMOTE_LATEST == 'true' && 'latest' || steps.tag.outputs.IMAGE_TAG }}
          container_name: app